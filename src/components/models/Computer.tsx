/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/computer.glb -o src/components/Computer.tsx -r public -t 
*/

import * as THREE from "three"
import { useGLTF } from "@react-three/drei"
import type { GLTF } from "three-stdlib"
import type { JSX } from "react"

type GLTFResult = GLTF & {
	nodes: {
		Comp_Mouse: THREE.Mesh
		Monitor: THREE.Mesh
		Drive: THREE.Mesh
		System_unit_1: THREE.Mesh
		System_unit_1_1: THREE.Mesh
		Keyboard1: THREE.Mesh
	}
	materials: {
		lambert3SG: THREE.MeshStandardMaterial
		initialShadingGroup: THREE.MeshStandardMaterial
	}
}

export default function Computer(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"/models/computer.glb"
	) as unknown as GLTFResult
	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.Comp_Mouse.geometry}
				material={materials.lambert3SG}
			/>
			<mesh
				geometry={nodes.Monitor.geometry}
				material={materials.lambert3SG}
				castShadow
				receiveShadow
			/>
			<mesh
				geometry={nodes.Drive.geometry}
				material={materials.lambert3SG}
				castShadow
				receiveShadow
			/>
			<mesh
				geometry={nodes.Keyboard1.geometry}
				material={materials.lambert3SG}
			/>
			<mesh
				geometry={nodes.System_unit_1.geometry}
				material={materials.lambert3SG}
				castShadow
				receiveShadow
			/>
			<mesh
				geometry={nodes.System_unit_1_1.geometry}
				material={materials.initialShadingGroup}
				castShadow
				receiveShadow
			/>
		</group>
	)
}

useGLTF.preload("/models/computer.glb")
