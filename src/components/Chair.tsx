/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/chair.glb -o src/components/Chair.tsx -r public -t 
*/

import * as THREE from "three"
import { useGLTF } from "@react-three/drei"
import type { GLTF } from "three-stdlib"
import type { JSX } from "react"

type GLTFResult = GLTF & {
	nodes: {
		["Node-Mesh"]: THREE.Mesh
		["Node-Mesh_1"]: THREE.Mesh
		["Node-Mesh_2"]: THREE.Mesh
		["Node-Mesh_3"]: THREE.Mesh
	}
	materials: {
		Executive: THREE.MeshStandardMaterial
		Executive__1: THREE.MeshStandardMaterial
		Executive__2: THREE.MeshStandardMaterial
		Executive__3: THREE.MeshStandardMaterial
	}
}

export default function Chair(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"/models/chair.glb"
	) as unknown as GLTFResult
	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes["Node-Mesh"].geometry}
				material={materials.Executive}
			/>
			<mesh
				geometry={nodes["Node-Mesh_1"].geometry}
				material={materials.Executive__1}
			/>
			<mesh
				geometry={nodes["Node-Mesh_2"].geometry}
				material={materials.Executive__2}
			/>
			<mesh
				geometry={nodes["Node-Mesh_3"].geometry}
				material={materials.Executive__3}
			/>
		</group>
	)
}

useGLTF.preload("/models/chair.glb")
